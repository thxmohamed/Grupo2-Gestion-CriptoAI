services:
  db:
    image: postgres:latest
    restart: unless-stopped
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB}
    volumes:
      - db_data:/var/lib/postgresql/data
    networks:
      - crypto-network
  backend-service:
    build:
      context: ../backend
      dockerfile: Dockerfile 
    restart: unless-stopped
    environment:
      - BINANCE_API_KEY=${BINANCE_API_KEY}
      - BINANCE_BASE_URL=${BINANCE_BASE_URL}
      - COINGECKO_BASE_URL=${COINGECKO_BASE_URL}
      - DATABASE_URL=${DATABASE_URL}
      - EMAIL_HOST=${EMAIL_HOST}
      - EMAIL_PORT=${EMAIL_PORT}
      - EMAIL_USERNAME=${EMAIL_USERNAME}
      - EMAIL_PASSWORD=${EMAIL_PASSWORD}
      - EMAIL_FROM_NAME=${EMAIL_FROM_NAME}
      - TELEGRAM_BOT_TOKEN=${TELEGRAM_BOT_TOKEN}
    ports:
      - "8000:8000"    
    networks:
      - crypto-network
  telegram-bot:
    build:
      context: ../backend
      dockerfile: Dockerfile.telegram
    restart: unless-stopped
    environment:
      - TELEGRAM_BOT_TOKEN=${TELEGRAM_BOT_TOKEN}
    depends_on:
      - backend-service
    networks:
      - crypto-network
  frontend-service:
    build:
      context: ../frontend
      dockerfile: Dockerfile 
    restart: unless-stopped
    ports:
      - "3000:3000"    
    depends_on:
      - backend-service
    networks:
      - crypto-network
networks:
  crypto-network:
    driver: bridge
volumes:
  db_data: